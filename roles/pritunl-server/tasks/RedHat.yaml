---
- name: Enable EPEL Repository on REHL 8
  dnf:
    name: ["epel-release", "elrepo-release"]
    state: latest
  become: True
  when: ansible_facts['os_family'] == 'RedHat' and ansible_facts['distribution_major_version'] == '8'

- name: Enable EPEL Repository on REHL 7
  yum:
    name: ["epel-release", "elrepo-release"]
    state: latest
  become: True
  when: ansible_facts['os_family'] == 'RedHat' and ansible_facts['distribution_major_version'] == '7'

- name: Copy out the pritunl repo file
  template:
    src: "pritunl-RedHat.j2"
    dest: /etc/yum.repos.d/pritunl-RedHat.repo

- name: Import gpg key
  shell: "{{ item }}"
  with_items:
    - gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys 7568D9BB55FF9E5287D586017AE645C0CF8E292A
    - gpg --armor --export 7568D9BB55FF9E5287D586017AE645C0CF8E292A > key.tmp; sudo rpm --import key.tmp; rm -f key.tmp

- name: Installing wireguard
  dnf:
   name: ['kmod-wireguard', 'wireguard-tools']
   state: latest

- name: Installing pritunl
  dnf:
   name: "pritunl"
   state: latest

- name: Replacing openvpn for pritunl-openvpn
  dnf:
   name: "pritunl-openvpn"
   state: latest
   allowerasing: yes

- name: "Increase open file limits"
  block:
  - name: Increase open file limit
    pam_limits:
      domain: "*"
      limit_type: hard
      limit_item: nofile
      value: 64000

  - name: Increase open file limit
    pam_limits:
      domain: "*"
      limit_type: soft
      limit_item: nofile
      value: 64000

  - name: Increase open file limit
    pam_limits:
      domain: root
      limit_type: hard
      limit_item: nofile
      value: 64000

  - name: Increase open file limit
    pam_limits:
      domain: root
      limit_type: soft
      limit_item: nofile
      value: 64000
  when: pritunl_increase_open_limit_file

- name: Set CAP_NET_BIND_SERVICE=+eip on /usr/bin/openvpn
  community.general.capabilities:
    path: /usr/bin/openvpn
    capability: CAP_NET_BIND_SERVICE+eip
    state: present

# - name: Set CAP_NET_BIND_SERVICE=+eip on /usr/bin/pritunl/bin/python2
#   community.general.capabilities:
#     path: /usr/bin/pritunl/bin/python2
#     capability: CAP_NET_BIND_SERVICE+eip
#     state: present

# - name: Set CAP_NET_BIND_SERVICE=+eip on /usr/bin/pritunl
#   community.general.capabilities:
#     path: /usr/bin/pritunl
#     capability: CAP_NET_BIND_SERVICE+eip
#     state: present

- name: Installing setools
  dnf:
   name: "setools"
   state: latest

- name: Check to see if semodule is loaded
  shell: "semodule -l | grep -i 'pritunl-openvpn'"
  register: grep_output
  ignore_errors: true

- name: Copy out the pritunl openvpn selinux policy file
  copy:
    src: files/pritunl-openvpn.cil
    dest: ~/pritunl-openvpn.cil
  when: grep_output.stdout == ""

- name: Compile SELinux policy
  command: checkmodule -M -m -o ~/pritunl-openvpn.mod ~/pritunl-openvpn.cil
  when: grep_output.stdout == ""

- name: Package SELinux policy
  command: semodule_package -o ~/pritunl-openvpn.pp -m ~/pritunl-openvpn.mod
  when: grep_output.stdout == ""

- name: Load SELinux policy package
  command: semodule -i ~/pritunl-openvpn.pp
  when: grep_output.stdout == ""
  
- name: Remove temporary policy files
  ansible.builtin.file:
    path: ~/pritunl-openvpn.*
    state: absent
  when: grep_output.stdout == ""

### Firewall rules

- name: permit traffic in public zone for https service
  ansible.posix.firewalld:
    zone: "public"
    service: https
    permanent: yes
    state: enabled

- name: permit traffic in public zone for 443/udp
  ansible.posix.firewalld:
    zone: "public"
    service: https
    permanent: yes
    state: enabled